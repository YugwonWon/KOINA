"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import baikal.speech.forced_align_service_pb2
import collections.abc
import grpc
import grpc.aio
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ForcedAlignServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    ForcedAlign: grpc.UnaryUnaryMultiCallable[
        baikal.speech.forced_align_service_pb2.ForcedAlignRequest,
        baikal.speech.forced_align_service_pb2.ForcedAlignResponse,
    ]
    """강제 정렬"""

    LongForcedAlign: grpc.StreamUnaryMultiCallable[
        baikal.speech.forced_align_service_pb2.LongForcedAlignRequest,
        baikal.speech.forced_align_service_pb2.ForcedAlignResponse,
    ]
    """긴 음성 강제 정렬"""

class ForcedAlignServiceAsyncStub:
    ForcedAlign: grpc.aio.UnaryUnaryMultiCallable[
        baikal.speech.forced_align_service_pb2.ForcedAlignRequest,
        baikal.speech.forced_align_service_pb2.ForcedAlignResponse,
    ]
    """강제 정렬"""

    LongForcedAlign: grpc.aio.StreamUnaryMultiCallable[
        baikal.speech.forced_align_service_pb2.LongForcedAlignRequest,
        baikal.speech.forced_align_service_pb2.ForcedAlignResponse,
    ]
    """긴 음성 강제 정렬"""

class ForcedAlignServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ForcedAlign(
        self,
        request: baikal.speech.forced_align_service_pb2.ForcedAlignRequest,
        context: _ServicerContext,
    ) -> typing.Union[baikal.speech.forced_align_service_pb2.ForcedAlignResponse, collections.abc.Awaitable[baikal.speech.forced_align_service_pb2.ForcedAlignResponse]]:
        """강제 정렬"""

    @abc.abstractmethod
    def LongForcedAlign(
        self,
        request_iterator: _MaybeAsyncIterator[baikal.speech.forced_align_service_pb2.LongForcedAlignRequest],
        context: _ServicerContext,
    ) -> typing.Union[baikal.speech.forced_align_service_pb2.ForcedAlignResponse, collections.abc.Awaitable[baikal.speech.forced_align_service_pb2.ForcedAlignResponse]]:
        """긴 음성 강제 정렬"""

def add_ForcedAlignServiceServicer_to_server(servicer: ForcedAlignServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
